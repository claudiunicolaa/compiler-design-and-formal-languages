PROGRAM_DEF         -> PROG_HEADING BLOCK

PROG_HEADING        -> program __IDENTIFIER__ ;

BLOCK               -> DECL_PART COMPOUND_STMT

DECL_PART           -> OPT_CONST_DEF_PART OPT_VAR_DEC_PART

OPT_CONST_DEF_PART  -> CONST_DEF_PART
                     | __eps__

OPT_VAR_DEC_PART    -> VAR_DEC_PART
                     | __eps__

CONST_DEF_PART      -> const CONST_DEF CONST_DEF_PART
                     | const CONST_DEF

CONST_DEF           -> __IDENTIFIER__ = __CONSTANT__ ;

VAR_DEC_PART        -> declare VAR_DEC ;
                     | declare VAR_DEC ; VAR_DEC_PART

VAR_DEC             -> IDENTIFIER_LIST as TYPE

IDENTIFIER_LIST     -> __IDENTIFIER__
                     | __IDENTIFIER__ , IDENTIFIER_LIST

COMPOUND_STMT       -> { STMT_SEQ }

STMT_SEQ            -> STMT ;
                     | STMT ; STMT_SEQ

STMT                -> SIMPLE_STMT
                     | STRUCTURED_STMT

SIMPLE_STMT         -> ASSIGN_STMT
                     | RETURN_STMT
                     | IO_STMT

ASSIGN_STMT         -> __IDENTIFIER__ = EXPRESSION

RETURN_STMT         -> return EXPRESSION

IO_STMT             -> read ( __IDENTIFIER__ )
                     | write ( __IDENTIFIER__ )

STRUCTURED_STMT     -> IF_STMT
                     | COMPOUND_STMT
                     | WHILE_STMT

WHILE_STMT          -> while ( CONDITION ) STMT

IF_STMT             -> IF_PART IF_OPTIONAL_ELSE

IF_PART             -> if ( CONDITION ) STMT

IF_OPTIONAL_ELSE    -> else STMT
                     | __eps__

CONDITION           -> EXPRESSION RELATIONAL_OPERATOR EXPRESSION

EXPRESSION          -> TERM
                     | TERM OPERATOR TERM

OPERATOR            -> +
                     | -
                     | ||
                     | *
                     | /
                     | %
                     | &&

TERM                -> __IDENTIFIER__
                     | __CONSTANT__
                     | ( EXPRESSION )

RELATIONAL_OPERATOR -> ==
                     | !=
                     | <
                     | <=
                     | >
                     | >=

VARIABLE            -> __IDENTIFIER__
                     | __IDENTIFIER__ INDEX_PART

INDEX_PART          -> [ EXPRESSION ]
                     | [ EXPRESSION ] INDEX_PART

TYPE                -> ARRAY_TYPE
                     | SCALAR_TYPE

SCALAR_TYPE         -> int
                     | char

ARRAY_TYPE          -> SCALAR_TYPE [ __CONSTANT__ ]
